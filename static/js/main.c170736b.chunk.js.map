{"version":3,"sources":["components/About.js","components/LoadingSpinner.js","utils/GetCharacterPhotoUrl.js","components/QuoteContainer.js","components/Home.js","utils/GetRandomQuote.js","menu.svg","components/Navbar.js","utils/GetQuoteByCharacterName.js","utils/GetQuoteByAnimeName.js","components/Search.js","App.js","index.js"],"names":["About","className","href","Spinner","fullScreen","GetCharacterPhotoUrl","characterName","animeName","a","replace","name","split","join","toLowerCase","controller","AbortController","signal","setTimeout","abort","fetch","then","response","json","results","find","character","anime","match","image_url","catch","QuoteContainer","props","quote","delay","useState","isPhotoLoading","setIsPhotoLoading","photoUrl","setPhotoUrl","useEffect","src","alt","Home","setQuote","isLoading","setIsLoading","error","setError","getQuote","data","onClick","StyledLink","to","children","Navbar","menuRef","createRef","menuStateChange","current","classList","toggle","menu","ref","GetQuoteByCharacterName","page","GetQuoteByAnimeName","Search","searchValue","setSearchValue","quotes","setQuotes","option","setOption","setPage","getQuotes","charactersPhotoToFetch","Set","map","setCopy","forEach","indexOf","onSubmit","event","preventDefault","value","onChange","e","target","type","autoFocus","placeholder","index","length","App","basename","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c170736b.chunk.js","sourcesContent":["export default function About() {\r\n    return (\r\n        <div className=\"container mx-auto p-5\">\r\n            <h1 className=\"text-4xl text-center\">About page</h1>\r\n            <p className=\"text-center mt-3 text-xl\">\r\n                Anime quotes is website where you can find quotes said by your favourite anime character. To get quotes I'm using\r\n                <a href=\"https://animechan.vercel.app\" className=\"text-purple-500 font-semibold\"> Anime chan API </a>\r\n                and to get characters picture \r\n                <a href=\"https://jikan.docs.apiary.io\" className=\"text-purple-500 font-semibold\"> Jikan - Unofficial MyAnimeList.net REST API </a>\r\n            </p>\r\n        </div>\r\n    )\r\n}","export default function Spinner({fullScreen}) {\r\n    return(\r\n        fullScreen ? \r\n        <div className=\"w-screen h-screen absolute left-0 top-0 flex justify-center items-center\">\r\n            <div className=\"relative animate-spin w-16 h-16 border-8 border-blue-500 rounded-full\">\r\n                <div className=\"absolute top-0 left-1/2 transform -translate-y-full -translate-x-1/2 w-2 h-2 bg-white\"/>\r\n            </div>\r\n        </div>\r\n        :\r\n        <div className=\"relative animate-spin w-16 h-16 border-8 border-blue-400 rounded-full\">\r\n            <div className=\"absolute top-0 left-1/2 transform -translate-y-full -translate-x-1/2 w-2 h-2 bg-white\"/>\r\n        </div>\r\n    )\r\n}","export default async function GetCharacterPhotoUrl(characterName, animeName) {\r\n    characterName = characterName.replace(/Å«/g,\"uu\");\r\n    const name = characterName.split(' ').join('%');\r\n    animeName = animeName.toLowerCase();\r\n\r\n    const controller = new AbortController();\r\n    const signal = controller.signal;\r\n\r\n    setTimeout(() => controller.abort(), 10000); //if server doesn't respond in 10 seconds, request will be aborted\r\n\r\n    return await fetch(`https://api.jikan.moe/v3/search/character?q=${name}&page=1`, { signal })\r\n    .then(response => response.json())\r\n    .then(response => response.results.find((character)=>character.anime.find(anime => anime.name.toLowerCase().match(animeName))).image_url)\r\n    .catch(()=>null)\r\n}","import { useEffect, useState } from \"react\";\r\nimport GetCharacterPhotoUrl from \"../utils/GetCharacterPhotoUrl\";\r\nimport Spinner from \"./LoadingSpinner\";\r\n\r\nexport default function QuoteContainer(props) {\r\n    const { delay, character, anime, quote } = props.quote;\r\n    const [isPhotoLoading, setIsPhotoLoading] = useState(true);\r\n    const [photoUrl, setPhotoUrl] = useState(null);\r\n    useEffect(()=>{\r\n        //added delay because of api requests limit\r\n        setTimeout(async ()=>{\r\n            const photoUrl = await GetCharacterPhotoUrl(character, anime);\r\n            setPhotoUrl(photoUrl);\r\n            setIsPhotoLoading(false);\r\n        },delay*1000)\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },[])\r\n    return (\r\n        <div className=\"mx-auto w-full xl:w-96 p-5 bg-blue-500 flex flex-col justify-between\">\r\n            <div>\r\n                {isPhotoLoading ? \r\n                <div className=\"relative w-20 h-96 mx-auto flex items-center\">\r\n                    <Spinner/>\r\n                </div>\r\n                :\r\n                    photoUrl ? \r\n                    <img src={photoUrl} className=\"mx-auto\" alt=\"character\"/>\r\n                    :\r\n                    <p className=\"text-center\">Couldn't find the photo</p>\r\n                }\r\n                <p className=\"mt-4 text-2xl italic\">\"{quote}\"</p>\r\n            </div>\r\n            <div>\r\n                <p className=\"mt-2 text-lg\">{character}</p>\r\n                <p className=\"text-sm\">{anime}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { useEffect, useState } from \"react\";\r\nimport GetRandomQuote from \"../utils/GetRandomQuote\";\r\nimport Spinner from \"./LoadingSpinner\";\r\nimport QuoteContainer from \"./QuoteContainer\";\r\n\r\nexport default function Home(){\r\n    const [quote, setQuote] = useState();\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n    \r\n    const getQuote = async () => {\r\n        setIsLoading(true);\r\n        try{\r\n            let data = await GetRandomQuote();\r\n            if(data.error || !data) {\r\n                setError(data.error || \"Too many requests\");\r\n            }\r\n            else{\r\n                setQuote(data);\r\n            }  \r\n        }\r\n        catch(err){\r\n            setError(err);\r\n        }\r\n        finally{\r\n            setIsLoading(false);\r\n        }\r\n    }\r\n    \r\n    useEffect(()=>{\r\n        getQuote();\r\n    },[])\r\n    return (\r\n        <div className=\"container mx-auto p-5\">\r\n            <h1 className=\"text-4xl text-center\">Random anime quotes</h1>\r\n            {isLoading ? <Spinner fullScreen/> : \r\n            error ? <p className=\"text-center text-2xl text-red-600\">{error}</p> : \r\n                <div className=\"mx-auto mt-8 flex flex-col justify-center\">\r\n                    <QuoteContainer quote={quote} />\r\n                    <button className=\"mx-auto px-10 py-3 bg-blue-500 hover:bg-blue-600 mt-8\" onClick={getQuote}>Get new random quote</button>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}","export default function GetRandomQuote() {\r\n    return fetch('https://animechan.vercel.app/api/random')\r\n    .then(response => response.json())\r\n}","export default __webpack_public_path__ + \"static/media/menu.f8235882.svg\";","import { createRef } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport menu from '../menu.svg'\r\n\r\nfunction StyledLink({ to, children, onClick }){\r\n    return (\r\n        <Link to={to} onClick={onClick} className=\" w-full text-center md:w-max px-4 py-1 md:bg-blue-700 hover:bg-blue-600 md:rounded-full text-lg\">{children}</Link>\r\n    )\r\n}\r\n\r\nexport default function Navbar(){\r\n    const menuRef = createRef();\r\n    const menuStateChange = () =>{\r\n        menuRef.current.classList.toggle('left-full');\r\n        menuRef.current.classList.toggle('left-0');\r\n    }\r\n    return (\r\n        <nav className=\"w-full h-14 border-b-2 border-gray-400 px-4 flex justify-between items-center sticky\">\r\n            <p className=\"text-2xl font-semibold italic\">Anime quotes</p>\r\n            <button className=\"md:hidden\" onClick={menuStateChange}>\r\n                <img src={menu} alt=\"menu\"/>\r\n            </button>\r\n            <div ref={menuRef} className=\"fixed top-0 left-full w-screen h-screen transition-all duration-700 bg-blue-900 md:bg-transparent md:w-auto md:h-auto md:static flex flex-col items-center gap-2 md:flex-row md:gap-5\">\r\n                <button className=\"text-3xl self-end mr-10 md:hidden\" onClick={menuStateChange}>x</button>\r\n                <StyledLink to=\"/\" onClick={menuStateChange}>Home</StyledLink>\r\n                <StyledLink to=\"/search\" onClick={menuStateChange}>Search</StyledLink>\r\n                <StyledLink to=\"/about\" onClick={menuStateChange}>About</StyledLink>\r\n            </div>\r\n        </nav>\r\n    )\r\n}","export default async function GetQuoteByCharacterName(characterName, page){\r\n    return await fetch(`https://animechan.vercel.app/api/quotes/character?name=${characterName}&page=${page}`)\r\n    .then(response => response.json());\r\n}","export default async function GetQuoteByAnimeName(animeName, page) {\r\n    return await fetch(`https://animechan.vercel.app/api/quotes/anime?title=${animeName}&page=${page}`)\r\n    .then(response => response.json())\r\n}","import { useEffect, useState } from \"react\"\r\nimport GetQuoteByCharacterName from '../utils/GetQuoteByCharacterName'\r\nimport GetQuoteByAnimeName from '../utils/GetQuoteByAnimeName'\r\nimport Spinner from \"./LoadingSpinner\";\r\nimport QuoteContainer from \"./QuoteContainer\";\r\n\r\nexport default function Search() {\r\n    const [searchValue, setSearchValue] = useState('');\r\n    const [quotes, setQuotes] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n    const [option, setOption] = useState('character');\r\n    const [page, setPage] = useState(1);\r\n    \r\n    const getQuotes = async () => {\r\n        if(searchValue)\r\n        {\r\n            setError(null);\r\n            setIsLoading(true);\r\n            try{\r\n                let data;\r\n                if(option === 'character'){\r\n                    data = await GetQuoteByCharacterName(searchValue, page);\r\n                }\r\n                else{\r\n                    data = await GetQuoteByAnimeName(searchValue, page);\r\n                }\r\n                if(data.error)\r\n                {\r\n                    setError(data.error);\r\n                }\r\n                else{\r\n                    const charactersPhotoToFetch = new Set(data.map(character => character.character));\r\n                    const setCopy = [...charactersPhotoToFetch];\r\n                    data.forEach((character)=>{\r\n                        character.delay = setCopy.indexOf(character.character);\r\n                    })\r\n                    setQuotes(data);\r\n                }\r\n            }\r\n            catch(err){\r\n                setError(err);\r\n            }\r\n            finally{\r\n                setIsLoading(false);\r\n            }\r\n        }\r\n    }\r\n    const handleSubmit = (event) =>{\r\n        event.preventDefault();\r\n        if(page !== 1){\r\n            setPage(1);\r\n        }\r\n        else{\r\n            getQuotes();\r\n        }\r\n    }\r\n    useEffect(()=>{\r\n        getQuotes();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },[page])\r\n    return (\r\n        <div className=\"container mx-auto p-5\">\r\n            <h1 className=\"text-4xl text-center\">Search quote</h1>\r\n            <form onSubmit={handleSubmit} className=\"flex flex-col md:flex-row w-full mx-auto mt-4 justify-center gap-5\">\r\n                <select className=\"bg-blue-700 py-1 px-2 outline-none\" value={option} onChange={(e)=>setOption(e.target.value)}>\r\n                    <option value=\"character\">Character</option>\r\n                    <option value=\"anime\">Anime</option>\r\n                </select>\r\n                <input type=\"text\" autoFocus className=\"outline-none bg-blue-700 px-2 py-1 w-full md:w-1/2 rounded\" placeholder={`Search by ${option} name...`} value={searchValue} onChange={e=>{setSearchValue(e.target.value)}}/>\r\n                <input type=\"submit\" value=\"Search\" className=\"mx-auto md:mx-0 w-max bg-blue-700 px-10 py-1 hover:bg-blue-600 cursor-pointer rounded\"/>\r\n            </form>\r\n            {isLoading ? \r\n            <Spinner fullScreen/> : \r\n                error ? <p className=\"text-center text-2xl text-red-600 mt-2\">{error}</p> :\r\n                <>\r\n                    <div className=\"lg:grid lg:grid-cols-3 flex flex-col gap-12 justify-center mt-8\">\r\n                        {quotes.map((quote, index)=>{\r\n                            return <QuoteContainer quote={quote} key={index}/>\r\n                        })}\r\n                    </div>\r\n                    <div className=\"mx-auto w-max mt-12 flex flex-col gap-6 md:flex-row md:gap-12\">\r\n                        {page > 1 &&  <button className=\"mx-auto w-44 py-3 bg-blue-500 hover:bg-blue-600\" onClick={()=>{setPage(page => page - 1)}}>Previous page</button>}\r\n                        {quotes.length === 10 && <button className=\"mx-auto w-44 py-3 bg-blue-500 hover:bg-blue-600\" onClick={()=>setPage(page => page + 1)}>Next page</button>}\r\n                    </div>\r\n                </>\r\n            }\r\n        </div>\r\n    )\r\n}","import { HashRouter, Route, Switch } from \"react-router-dom\";\r\nimport About from \"./components/About\";\r\nimport Home from \"./components/Home\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport Search from \"./components/Search\";\r\n\r\nexport default function App() {\r\n    return (\r\n        <div className=\"min-h-screen w-full bg-blue-900 text-white\">\r\n            <HashRouter basename=\"/\">\r\n                <Navbar/>\r\n                <Switch>\r\n                    <Route exact path=\"/\">\r\n                        <Home/>\r\n                    </Route>\r\n                    <Route path=\"/about\">\r\n                        <About/>\r\n                    </Route>\r\n                    <Route path=\"/search\">\r\n                        <Search/>\r\n                    </Route>\r\n                </Switch>\r\n            </HashRouter>\r\n        </div>\r\n    )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}